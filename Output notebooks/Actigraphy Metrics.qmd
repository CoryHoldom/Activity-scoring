---
title: "Actigraphy Metrics"
author: "Cory Holdom"
format:
  html: default
  gfm: default
editor: visual
echo: true
---

## Overview

Pipeline for the derivation of activity summary metrics for wrist-worn wearables outcomes.

Examples are sourced from the [MotionSense dataset](https://www.kaggle.com/datasets/malekzadeh/motionsense-dataset).

```{r Libraries}
library(tidyverse)
library(gsignal)

filter = dplyr::filter

```



```{r Importing Data}
#| warning: false

Data_raw_walk <- readr::read_csv(
  "../Motionsense Data/A_DeviceMotion_data/wlk_7/sub_1.csv",
  col_types = cols_only(`...1` = col_number(),
                        userAcceleration.x = col_double(),
                        userAcceleration.y = col_double(),
                        userAcceleration.z = col_double())
)

names(Data_raw_walk) <- c("ts",
                          "userAcceleration_X",
                          "userAcceleration_Y",
                          "userAcceleration_Z")

Data_raw_walk$ts = Data_raw_walk$ts / 50 # Converting index to a relative time in seconds

head(Data_raw_walk)

ggplot(Data_raw_walk[1000:1500,], aes(x = ts, y = userAcceleration_Z)) +
  theme_bw() +
  geom_line() +
  labs(title = "Example 10s of walking data", x = "Duration (s)", y = "Z-Acceleration (g)")

```



```{r Cleaning and combining accelerometry}

clean_acc = function(raw_signal, filter_order = 6, fs = 50, freq_cutoff = c(0.1, 20)){
  
  # Estimate vector magnitude and direction 
  # Filter data with a band-pass Butterworth filter to smooth motion
  # and remove gravity component
  
  w_cutoff = freq_cutoff / (fs / 2)
  
  butt_filt = gsignal::butter(n = filter_order, w = w_cutoff, type = "pass")
  
  clean_signal = gsignal::filter(butt_filt, raw_signal)
  
  return(clean_signal)
  
}

combine_acc = function(raw_signal, clean = TRUE){
  
  if(clean){
    raw_signal = sapply(raw_signal, clean_acc)
  }
  
  vm = sqrt(raw_signal[,1] ** 2 + raw_signal[,2] ** 2 + raw_signal[,3] ** 2)
  
  return(vm)
  
}

```

```{r}
Data_clean_walk = data.frame(
  ts = Data_raw_walk$ts,
  sapply(Data_raw_walk[,2:4], clean_acc)
)

Data_clean_walk$userAcceleration_VM = combine_acc(Data_clean_walk[,2:4], clean = F)

ggplot(Data_clean_walk[1000:1500,], aes(x = ts, y = userAcceleration_VM)) +
  theme_bw() +
  geom_line() +
  labs(title = "Example 10s of (cleaned) walking data", x = "Duration (s)", y = "Acceleration magnitude (g)")
```

